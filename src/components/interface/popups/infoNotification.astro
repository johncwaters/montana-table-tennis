---
export interface Notification {
    notification: string;
    url?: string;
}
export interface Props {
    notificationData: Notification;
}

const { notificationData } = Astro.props;

const notificationUrl = "location.href='" + notificationData.url + "';";
---

<div
    id="infoNotification"
    class="alert alert-info shadow-lg w-11/12 mt-3 mb-2 cursor-pointer"
>
    <div>
        <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            class="stroke-current flex-shrink-0 w-6 h-6"
            ><path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
            ></path>
        </svg>
        <span onclick={notificationUrl} class="text-center"
            >{notificationData.notification}
        </span>
    </div>
    <div class="flex-none">
        <button onclick="closeAlert(event)" class="btn btn-sm">X</button>
        <button onclick={notificationUrl} class="btn btn-sm btn-primary"
            >Register</button
        >
    </div>
</div>
<script is:inline>
    function closeAlert(event) {
        let element = event.target;
        while (element.nodeName !== "BUTTON") {
            element = element.parentNode;
        }
        element.parentNode.parentNode.parentNode.removeChild(
            element.parentNode.parentNode
        );
    }
</script>
